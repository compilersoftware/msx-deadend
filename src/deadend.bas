10 REM DEAD END - Idea original: Wolfgang Thaller for Macintosh (C) 1993-1998
15 REM Programa: Miguel A. Garcia Prada for ZX-Spectrum 2019
17 REM Graficos: Javier Vispe
18 REM Apoyo tecnico: Jon Cortazar
19 REM Port MSX: Fede J. Alvarez Valero
20 REM (c) 2019 Compiler Software - compiler.speccy.org
35 SCREEN 1,2,0: COLOR 4,1,1: WIDTH 32: DEFINT A-Z: KEY OFF
40 GOSUB 9900
50 L=175: DIM B(L)
60 NIVEL=0
61 M1$=CHR$(184)+CHR$(185): REM PARTE DE ARRIBA DEL MURO
62 M2$=CHR$(153)+CHR$(154): REM PARTE DE ABAJO DEL MURO
63 P1$=CHR$(209)+CHR$(210): REM PARTE DE ARRIBA DEL PROTA
64 P2$=CHR$(224)+CHR$(225): REM PARTE DE ABAJO DEL PROTA
65 C1$=CHR$(192)+CHR$(200): REM PARTE DE ARRIBA DE LA CAJA
66 C2$=CHR$(201)+CHR$(208): REM PARTE DE ABAJO DE LA CAJA
67 S1$=CHR$(232)+CHR$(233): REM PARTE DE ARRIBA DE LA SALIDA
68 S2$=CHR$(234)+CHR$(235): REM PARTE DE ABAJO DE LA SALIDA
100 REM MENU DEL JUEGO
105 COLOR 4,1,1: GOSUB 9910: CLS
110 LOCATE 7,1: PRINT CHR$(128)+CHR$(128)+CHR$(128)+"  "+CHR$(128)+CHR$(128)+CHR$(128)+"  "+CHR$(128)+CHR$(128)+CHR$(128)+CHR$(128)+" "+CHR$(128)+CHR$(128)+CHR$(128)
115 LOCATE 7,2: PRINT CHR$(136)+"  "+CHR$(136)+" "+CHR$(136)+"    "+CHR$(136)+"  "+CHR$(136)+" "+CHR$(136)+"  "+CHR$(136)
120 LOCATE 7,3: PRINT CHR$(144)+"  "+CHR$(144)+" "+CHR$(144)+"    "+CHR$(144)+"  "+CHR$(144)+" "+CHR$(144)+"  "+CHR$(144)
125 LOCATE 7,4: PRINT CHR$(152)+"  "+CHR$(152)+" "+CHR$(152)+CHR$(152)+CHR$(152)+"  "+CHR$(152)+CHR$(152)+CHR$(152)+CHR$(152)+" "+CHR$(152)+"  "+CHR$(152)
130 LOCATE 7,5: PRINT CHR$(160)+"  "+CHR$(160)+" "+CHR$(160)+"    "+CHR$(160)+"  "+CHR$(160)+" "+CHR$(160)+"  "+CHR$(160)
135 LOCATE 7,6: PRINT CHR$(168)+CHR$(168)+CHR$(168)+"  "+CHR$(168)+CHR$(168)+CHR$(168)+CHR$(168)+" "+CHR$(168)+"  "+CHR$(168)+" "+CHR$(168)+CHR$(168)+CHR$(168)
140 LOCATE 7,8: PRINT CHR$(128)+CHR$(128)+CHR$(128)+"  "+CHR$(128)+"  "+CHR$(128)+" "+CHR$(128)+CHR$(128)+CHR$(128)
145 LOCATE 7,9: PRINT CHR$(136)+"    "+CHR$(136)+"  "+CHR$(136)+" "+CHR$(136)+"  "+CHR$(136)
150 LOCATE 7,10: PRINT CHR$(144)+"    "+CHR$(144)+CHR$(144)+" "+CHR$(144)+" "+CHR$(144)+"  "+CHR$(144)
155 LOCATE 7,11: PRINT CHR$(152)+CHR$(152)+CHR$(152)+"  "+CHR$(152)+" "+CHR$(152)+CHR$(152)+" "+CHR$(152)+"  "+CHR$(152)
160 LOCATE 7,12: PRINT CHR$(160)+"    "+CHR$(160)+"  "+CHR$(160)+" "+CHR$(160)+"  "+CHR$(160)
165 LOCATE 7,13: PRINT CHR$(168)+CHR$(168)+CHR$(168)+CHR$(168)+" "+CHR$(168)+"  "+CHR$(168)+" "+CHR$(168)+CHR$(168)+CHR$(168)+"  "+CHR$(168)+CHR$(168)+CHR$(168)+CHR$(168)
170 LOCATE 12,16: PRINT "zIVEL "; NIVEL+1
175 LOCATE 12,18: PRINT "xOMIENZA"
180 LOCATE 14,20: PRINT "yNFO"
182 LOCATE 4,22: PRINT "(C)COMPILER SOFTWARE 2019";: LOCATE 7,23: PRINT "COMPILER.SPECCY.ORG";
185 A$=INKEY$
190 IF A$="I" OR A$="i" THEN GOTO 300
195 IF A$="C" OR A$="c" THEN GOTO 500
200 IF A$="N" OR A$="n" THEN GOTO 205
202 GOTO 185
205 NIVEL=NIVEL+1: IF NIVEL=10 THEN NIVEL=0
210 LOCATE 18,16: PRINT "  ";: LOCATE 18,16: PRINT USING "##";NIVEL+1;
215 IF INKEY$<>"" THEN GOTO 215
220 GOTO 185
300 REM INFO
305 COLOR 4,1,1: CLS
310 LOCATE 2,20: PRINT "2019 MIGUEL G. PRADA PARA EL"
315 LOCATE 0,21: PRINT "CONCURSO BASIC BYTEMANIACOS 2020"
317 LOCATE 2,22: PRINT "PORT MSX POR FEDE J. ALVAREZ"
318 LOCATE 10,23: PRINT "VERSION 1.0"
320 LOCATE 3,0: PRINT "DEAD END ESTA BASADO EN EL"
325 LOCATE 1,1: PRINT "JUEGO DEL MISMO NOMBRE, CREADO"
330 LOCATE 0,2: PRINT "PARA MACINTOSH ENTRE 1993 Y 1998"
335 LOCATE 6,3: PRINT "POR WOLFGANG THALLER"
337 LOCATE 3,5: PRINT "GRAFICOS GRACIAS A J.VISPE"
338 LOCATE 3,6: PRINT "APOYO TECNICO JON CORTAZAR"
340 LOCATE 4,10: PRINT "EL JUEGO SE CONTROLA CON"
350 LOCATE 2,12: PRINT "O - IZQUIERDA    P - DERECHA"
355 LOCATE 2,13: PRINT "Q - ARRIBA       A - ABAJO"
360 LOCATE 2,14: PRINT "R - REINICIA EL NIVEL"
365 LOCATE 2,15: PRINT "Y - REGRESA AL MENU"
380 IF INKEY$<>"" THEN GOTO 380
385 IF INKEY$<>"" THEN GOTO 100
390 GOTO 385
500 REM LANZANDO EL NIVEL
510 COLOR 7,1,1: GOSUB 9910: MOV=0
515 LOCATE 0,23: FOR F=0 TO 31: PRINT CHR$(144);: NEXT F
520 LOCATE 0,24: PRINT USING " Nivel: ##";NIVEL+1;: LOCATE 12,24: PRINT USING "Movimientos:   ####";MOV; 
522 GOSUB 800
525 GOSUB 1000
532 LOCATE XP,YP: PRINT P1$;: LOCATE XP,YP+1: PRINT P2$;
535 P=B+(((YP/2)*16)+(XP/2))
540 GOTO 1100
800 REM BARRIDO CLS
805 FOR F=21 TO 0 STEP -1
810 LOCATE 0,F: PRINT "                                ";
815 NEXT F
820 RETURN
900 REM FINAL DEL NIVEL
901 NIVEL=NIVEL+1: IF NIVEL=10 THEN NIVEL=0
902 C$="": FOR F=0 TO 21: C$=C$+CHR$(137): NEXT F
905 LOCATE 5,5: PRINT C$;
910 FOR F=6 TO 14
915 LOCATE 5,F: PRINT CHR$(137)+"                    "+CHR$(137);
920 NEXT F
925 LOCATE 5,15: PRINT C$
930 LOCATE 8,8: PRINT "NIVEL COMPLETADO";: LOCATE 8,10: PRINT USING "MOVIMIENTOS ####";MOV: LOCATE 8,12: PRINT USING "PROXIMO NIVEL ##";NIVEL+1;
935 IF INKEY$<>"" THEN GOTO 935
940 IF INKEY$<>"" THEN GOTO 500
945 GOTO 940
1000 REM MAPEANDO
1005 X=0: Y=0
1010 GOSUB 8000
1015 FOR F=0 TO 175: READ A: B(F)=A
1020 IF A=0 THEN GOTO 1050
1025 IF A=1 THEN LOCATE X,Y: PRINT M1$;: LOCATE X,Y+1: PRINT M2$;: GOTO 1050
1026 IF A=2 THEN LOCATE X,Y: PRINT C1$;: LOCATE X,Y+1: PRINT C2$;: GOTO 1050
1030 IF A=3 THEN LOCATE X,Y: PRINT S1$;: LOCATE X,Y+1: PRINT S2$;: GOTO 1050
1050 X=X+2
1055 IF X>=32 THEN X=0: Y=Y+2
1060 NEXT F
1065 READ XP: READ YP
1070 RETURN
1100 REM BUCLE PRINCIPAL
1105 T$=INKEY$
1210 IF T$="O" OR T$="o" THEN GOTO 1300
1215 IF T$="P" OR T$="p" THEN GOTO 1400
1220 IF T$="Q" OR T$="q" THEN GOTO 1500
1225 IF T$="A" OR T$="a" THEN GOTO 1600
1230 IF T$="R" OR T$="r" THEN GOTO 500
1235 IF T$="Y" OR T$="y" THEN GOTO 100
1245 GOTO 1105
1300 REM MOVIMIENTO IZQUIERDA
1305 P=P-1: B1=B(P): P=P-1: B2=B(P): P=P+3: B3=B(P): P=P-1
1310 IF B1<>0 THEN GOTO 1320
1315 GOSUB 2000: GOSUB 2000: P=P-1: GOTO 1895
1320 IF B1=2 AND B2=0 AND B3=0 THEN GOTO 1350
1325 IF B1=3 THEN GOSUB 2000: GOSUB 2000: GOTO 900
1330 GOTO 1900
1350 REM EMPUJAMOS A LA IZQUIERDA
1355 P=P-1: B(P)=0: B(P-1)=2
1357 GOSUB 2050: GOSUB 2050: GOSUB 2000: GOSUB 2000
1360 XP=XP-1
1365 LOCATE XP-2,YP: PRINT C1$+P1$+" ";: LOCATE XP-2,YP+1: PRINT C2$+P2$+" ";
1370 XP=XP-1
1375 LOCATE XP-2,YP: PRINT C1$+P1$+" ";: LOCATE XP-2,YP+1: :PRINT C2$+P2$+" ";
1380 GOTO 1895
1400 REM MOVIMIENTO DERECHA
1405 P=P+1: B1=B(P): P=P+1: B2=B(P): P=P-3: B3=B(P): P=P+1
1410 IF B1<>0 THEN GOTO 1420
1415 GOSUB 2050: GOSUB 2050: P=P+1: GOTO 1895
1420 IF B1=2 AND B2=0 AND B3=0 THEN GOTO 1450
1425 IF B1=3 THEN GOSUB 2050: GOSUB 2050: GOTO 900
1430 GOTO 1900
1450 REM EMPUJAMOS A LA DERECHA
1455 P=P+1: B(P)=0: B(P+1)=2
1457 GOSUB 2000: GOSUB 2000: GOSUB 2050: GOSUB 2050
1460 XP=XP+1
1465 LOCATE XP-1,YP: PRINT " "+P1$+C1$;: LOCATE XP-1,YP+1: PRINT " "+P2$+C2$;
1470 XP=XP+1
1475 LOCATE XP-1,YP: PRINT " "+P1$+C1$;: LOCATE XP-1,YP+1: PRINT " "+P2$+C2$;
1480 GOTO 1895
1500 REM MOVIMIENTO ARRIBA
1505 P=P-16: GOSUB 7000: B1=V: P=P-16: GOSUB 7000: B2=V: P=P+48: GOSUB 7000: B3=V: P=P-16
1510 IF B1<>0 THEN GOTO 1520
1515 GOSUB 2075: GOSUB 2075: P=P-16: GOTO 1895
1520 IF B1=2 AND B2=0 AND B3=0 THEN GOTO 1550
1525 IF B1=3 THEN GOSUB 2075: GOSUB 2075: GOTO 900
1530 GOTO 1900
1550 REM EMPUJAMOS ARRIBA
1555 P=P-16: B(P)=0: B(P-16)=2
1557 GOSUB 3025: GOSUB 3025: GOSUB 2075: GOSUB 2075
1565 LOCATE XP,YP-3: PRINT C1$;: LOCATE XP,YP-2: PRINT C2$;: GOSUB 2075
1575 LOCATE XP,YP-3: PRINT C1$;: LOCATE XP,YP-2: PRINT C2$;: GOSUB 2075
1580 GOTO 1895
1600 REM MOVIMIENTO ABAJO
1605 P=P+16: GOSUB 7000: B1=V: P=P+16: GOSUB 7000: B2=V: P=P-48: GOSUB 7000: B3=V: P=P+16
1610 IF B1<>0 THEN GOTO 1620
1615 GOSUB 3025: GOSUB 3025: P=P+16: GOTO 1895
1620 IF B1=2 AND B2=0 AND B3=0 THEN GOTO 1650
1625 IF B1=3 THEN GOSUB 3025: GOSUB 3025: GOTO 900
1630 GOTO 1900
1650 REM EMPUJAMOS ABAJO
1655 P=P+16: B(P)=0: B(P+16)=2
1657 GOSUB 2075: GOSUB 2075: GOSUB 3025: GOSUB 3025
1665 LOCATE XP,YP+3: PRINT C1$;: LOCATE XP,YP+4: PRINT C2$;: GOSUB 3025
1675 LOCATE XP,YP+3: PRINT C1$;: LOCATE XP,YP+4: PRINT C2$;: GOSUB 3025
1680 GOTO 1895
1895 MOV=MOV+1
1900 LOCATE 27,24: PRINT USING "####";MOV;
1905 GOTO 1100
2000 REM PINTA PERSONAJE UN PASO A LA IZQUIERDA BORRANDO RASTRO
2005 XP=XP-1
2010 LOCATE XP,YP: PRINT P1$+" ";: LOCATE XP,YP+1: PRINT P2$+" ";
2012 BEEP
2015 RETURN
2050 REM PINTA PERSONAJE UN PASO A LA DERECHA BORRANDO RASTRO
2055 LOCATE XP,YP: PRINT " "+P1$;: LOCATE XP,YP+1: PRINT " "+P2$;
2060 XP=XP+1
2062 BEEP
2065 RETURN
2075 REM PINTA PERSONAJE UN PASO ARRIBA BORRANDO RASTRO
2080 YP=YP-1
2085 LOCATE XP,YP: PRINT P1$;: LOCATE XP,YP+1: PRINT P2$;: LOCATE XP,YP+2: PRINT "  ";
2087 BEEP
2090 RETURN
3025 REM PINTA PERSONAJE UN PASO ABAJO BORRANDO RASTRO
3030 LOCATE XP,YP: PRINT "  ";
3035 YP=YP+1
3040 LOCATE XP,YP: PRINT P1$;: LOCATE XP,YP+1: PRINT P2$;
3042 BEEP
3045 RETURN
7000 REM LEE BUFFER 
7001 REM P = INDICE
7002 REM V = B(P) O 0 SI P FUERA DE RANGO
7005 IF P<0 OR P>L THEN V=0 ELSE V=B(P)
7010 RETURN
8000 REM RESTAURAR DATOS DE NIVELES @TODO si RESTORE admite variables, hacer como en Spectrum
8001 IF NIVEL=0 THEN RESTORE 9000
8002 IF NIVEL=1 THEN RESTORE 9020
8003 IF NIVEL=2 THEN RESTORE 9040
8004 IF NIVEL=3 THEN RESTORE 9060
8005 IF NIVEL=4 THEN RESTORE 9080
8006 IF NIVEL=5 THEN RESTORE 9100
8007 IF NIVEL=6 THEN RESTORE 9120
8008 IF NIVEL=7 THEN RESTORE 9140
8009 IF NIVEL=8 THEN RESTORE 9160
8010 IF NIVEL=9 THEN RESTORE 9180
8011 REM RESTORE 9200
8020 RETURN
9000 REM NIVEL1
9001 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9002 DATA 0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0
9003 DATA 0,0,0,1,1,1,1,3,1,1,1,1,0,0,0,0
9004 DATA 0,1,1,1,0,2,0,2,0,0,0,1,1,1,0,0
9005 DATA 1,1,0,0,0,0,2,2,2,0,2,0,0,1,1,0
9006 DATA 1,2,0,2,0,2,0,2,0,0,0,2,0,2,1,0
9007 DATA 1,2,0,0,2,0,2,2,2,2,2,0,0,2,1,0
9008 DATA 1,2,2,2,0,2,0,0,2,0,0,2,2,2,1,0
9009 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9010 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9011 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9012 DATA 14,14
9020 REM NIVEL 2
9021 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9022 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9023 DATA 1,0,0,2,0,2,0,0,0,2,0,2,0,3,1,0
9024 DATA 1,0,0,2,0,2,0,2,2,2,2,0,2,0,1,0
9025 DATA 1,0,0,2,0,2,0,0,0,2,0,2,0,0,1,0
9026 DATA 1,0,0,2,0,2,0,2,2,0,2,0,2,0,1,0
9027 DATA 1,0,0,2,0,2,0,0,0,2,0,2,0,2,1,0
9028 DATA 1,0,0,2,0,2,0,2,2,0,2,0,2,0,1,0
9029 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9030 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9031 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9032 DATA 2,8
9040 REM NIVEL 3
9041 DATA 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9042 DATA 0,1,0,0,0,2,2,0,0,0,0,0,2,0,1,0
9043 DATA 0,1,0,0,0,0,0,0,2,2,0,2,0,2,1,0
9044 DATA 0,1,0,0,0,2,2,0,2,0,2,0,2,0,1,0
9045 DATA 0,1,0,0,2,2,0,0,2,2,2,2,2,0,1,0
9046 DATA 0,1,0,0,2,0,2,0,2,0,0,0,0,0,1,0
9047 DATA 0,1,0,0,0,2,0,2,0,0,2,0,0,2,1,0
9048 DATA 0,1,0,0,0,0,2,0,2,0,2,2,2,2,1,0
9049 DATA 0,1,0,0,0,2,2,0,0,2,2,2,3,0,1,0
9050 DATA 0,1,0,0,0,2,2,0,0,2,0,0,0,0,1,0
9051 DATA 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9052 DATA 4,10
9060 REM NIVEL 4
9061 DATA 0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0
9062 DATA 0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0
9063 DATA 0,0,1,1,1,0,1,1,2,2,0,2,0,1,0,0
9064 DATA 0,1,0,1,1,0,1,0,0,2,0,0,0,1,0,0
9065 DATA 0,1,0,0,0,2,2,0,0,0,2,0,2,1,0,0
9066 DATA 0,1,2,0,2,0,2,0,0,0,2,2,0,1,0,0
9067 DATA 0,1,0,1,1,0,1,0,2,2,0,2,2,1,0,0
9068 DATA 0,0,1,1,1,0,1,1,0,2,0,0,3,1,0,0
9069 DATA 0,0,0,0,0,1,0,1,2,0,0,0,1,0,0,0
9070 DATA 0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0
9071 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9072 DATA 10,14
9080 REM NIVEL 5
9081 DATA 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
9082 DATA 0,0,0,0,0,0,1,3,1,0,0,0,0,0,0,0
9083 DATA 0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
9084 DATA 0,0,0,0,1,0,2,2,2,0,1,0,0,0,0,0
9085 DATA 0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0
9086 DATA 0,0,1,0,2,2,2,2,2,2,2,0,1,0,0,0
9087 DATA 0,0,0,1,0,0,2,0,2,0,0,1,0,0,0,0
9088 DATA 0,0,0,0,1,0,0,2,0,0,1,0,0,0,0,0
9089 DATA 0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
9090 DATA 0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0
9091 DATA 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
9092 DATA 14,18
9100 REM NIVEL 6
9101 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9102 DATA 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0
9103 DATA 0,0,1,0,0,0,0,0,0,0,2,0,0,1,0,0
9104 DATA 0,0,1,2,0,0,2,0,0,2,0,0,0,1,0,0
9105 DATA 0,0,1,0,2,2,2,2,2,0,2,2,2,1,0,0
9106 DATA 0,0,1,0,2,0,0,2,0,2,2,0,0,1,0,0
9107 DATA 0,0,1,0,2,0,0,2,0,2,0,0,2,1,0,0
9108 DATA 0,0,1,3,0,2,0,0,0,1,2,0,0,1,0,0
9109 DATA 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0
9110 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9111 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
9112 DATA 24,10
9120 REM NIVEL 7
9121 DATA 0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0
9122 DATA 0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0
9123 DATA 0,1,0,0,2,0,2,0,2,0,2,0,2,2,0,1
9124 DATA 0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,1
9125 DATA 0,1,0,2,2,2,2,2,2,2,2,2,2,2,1,1
9126 DATA 1,0,0,0,2,0,0,2,0,0,0,0,0,0,0,1
9127 DATA 0,1,0,1,0,0,2,0,2,0,2,0,2,2,1,1
9128 DATA 0,0,1,0,2,0,0,2,2,0,2,0,2,0,0,1
9129 DATA 0,1,0,0,2,0,2,0,2,0,2,0,2,0,2,1
9130 DATA 0,0,1,0,3,1,0,1,0,1,0,1,0,1,1,0
9131 DATA 0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0
9132 DATA 6,4
9140 REM NIVEL 8
9141 DATA 0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
9142 DATA 0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0
9143 DATA 0,1,0,1,1,1,1,1,1,0,1,0,1,1,0,0
9144 DATA 0,1,0,1,0,0,2,0,1,0,0,1,0,1,0,0
9145 DATA 0,1,0,1,0,0,2,0,0,2,2,2,0,0,1,0
9146 DATA 0,1,0,0,2,0,0,2,2,0,0,0,2,2,1,0
9147 DATA 0,1,0,1,0,0,2,0,0,2,0,2,0,3,1,0
9148 DATA 0,1,0,1,0,0,2,2,1,0,2,1,0,1,1,0
9149 DATA 0,1,0,1,1,1,1,1,1,0,0,1,0,0,0,0
9150 DATA 0,1,0,0,0,0,0,0,0,0,0,1,2,0,0,0
9151 DATA 0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
9152 DATA 6,10
9160 REM NIVEL 9
9161 DATA 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0
9162 DATA 0,0,1,1,3,2,0,2,0,2,0,0,1,1,0,0
9163 DATA 0,0,1,0,0,2,0,2,0,2,0,2,0,1,0,0
9164 DATA 0,0,1,0,1,0,0,2,0,0,0,0,0,1,0,0
9165 DATA 0,0,1,0,2,0,0,0,0,2,0,2,0,1,0,0
9166 DATA 0,0,1,2,0,2,2,0,2,0,2,2,2,1,0,0
9167 DATA 0,0,1,0,2,0,2,2,2,2,0,2,0,1,0,0
9168 DATA 0,0,1,0,0,0,2,0,0,0,2,0,0,1,0,0
9169 DATA 0,0,1,0,2,0,2,0,2,0,2,0,0,1,0,0
9170 DATA 0,0,1,1,0,0,0,0,2,0,2,0,1,1,0,0
9171 DATA 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0
9172 DATA 8,18
9180 REM NIVEL 10
9181 DATA 0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0
9182 DATA 0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0
9183 DATA 0,0,0,1,1,1,0,2,0,0,0,1,1,1,0,0
9184 DATA 0,1,1,1,0,2,0,0,2,0,2,0,0,1,1,1
9185 DATA 1,1,0,0,2,0,2,0,0,2,0,0,2,0,0,1
9186 DATA 1,0,0,2,0,2,0,2,2,2,2,2,2,0,0,3
9187 DATA 1,1,0,0,2,0,2,2,0,2,0,0,2,0,2,1
9188 DATA 0,1,1,1,0,2,0,0,2,0,0,2,0,1,1,1
9189 DATA 0,0,0,1,1,1,0,2,0,0,0,1,1,1,0,0
9190 DATA 0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0
9191 DATA 0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0
9192 DATA 2,10
9200 REM NIVEL TEST
9201 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9202 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
9203 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
9204 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
9205 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
9206 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
9207 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
9208 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
9209 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
9210 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
9211 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9212 DATA 28,2
9500 REM UDG (EL PRIMER NUMERO ES EL CODIGO DE CARACTER)
9510 REM MURO
9511 DATA 184,0,170,254,254,0,239,239,239
9512 DATA 185,0,170,254,254,0,239,239,239
9513 DATA 153,0,254,254,254,0,239,239,170
9514 DATA 154,0,254,254,254,0,239,239,170
9520 REM CAJA
9521 DATA 192,0,127,127,0,111,111,96,109
9522 DATA 200,0,254,254,0,182,118,230,214
9523 DATA 201,107,103,110,109,0,127,127,0
9524 DATA 208,182,6,246,246,0,254,254,0
9530 REM PROTA
9531 DATA 209,0,7,24,32,64,64,64,56
9532 DATA 210,0,224,24,100,18,2,2,28
9533 DATA 224,71,120,71,86,71,126,31,0
9534 DATA 225,226,10,210,170,210,166,248,0
9550 REM SALIDA
9551 DATA 232,0,42,85,0,127,74,90,77
9552 DATA 233,0,170,84,0,254,162,182,182
9553 DATA 234,90,74,127,127,0,42,85,0
9554 DATA 235,182,182,254,254,0,170,84,0
9560 REM CARACTER MARCO FINAL DE NIVEL
9561 DATA 137,170,85,170,85,170,85,170,85
9570 REM CARACTER ROTULO DEAD END_ (MULTICOLOR)
9571 DATA 0,85,0,170,85,170,255,255
9600 REM COLORES TILES
9610 DATA &H7F,&H47,&H14,&H81,&HB8,&HFB,&H41,&H61,&HA1,&HB1,&HF1,&HE1,&H71,&HB8
9900 REM GENERANDO TILES
9901 RESTORE 9500: FOR F=0 TO 17: READ C: FOR T=0 TO 7: READ A: VPOKE (C*8)+T,A: NEXT T: NEXT F
9902 RESTORE 9570: FOR T=0 TO 7: READ A: FOR C=128 TO 168 STEP 8: VPOKE (C*8)+T,A: NEXT C: NEXT T
9903 REM LETRAS INVERTIDAS PARA EL MENU
9904 M=ASC("C"): I=ASC("x"): FOR T=0 TO 7: VPOKE (I*8)+T,(VPEEK((M*8)+T) XOR 255) AND 254: NEXT T
9905 M=ASC("I"): I=ASC("y"): FOR T=0 TO 7: VPOKE (I*8)+T,(VPEEK((M*8)+T) XOR 255) AND 254: NEXT T
9906 M=ASC("N"): I=ASC("z"): FOR T=0 TO 7: VPOKE (I*8)+T,(VPEEK((M*8)+T) XOR 255) AND 254: NEXT T
9910 REM GENERANDO COLORES PARA LOS TILES
9911 RESTORE 9600: FOR T=16 TO 29: READ A: VPOKE BASE(6)+T,A: NEXT T
9914 RETURN
